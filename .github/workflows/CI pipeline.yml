name: AI QA Coverage Bot

on:
  pull_request:
    paths:
      # Uncomment if you want to limit trigger
       - '**/*.ts'
       - '**/*.js'
       - 'coverage/coverage-summary.json'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  test-unit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run Jest tests and generate coverage
        run: npm run test:unit -- --coverage

      - name: Show generated coverage files
        run: ls -la coverage/

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-summary
          path: coverage/coverage-summary.json

  ai-coverage-audit:
    needs: test-unit
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-summary
          path: coverage/

      - name: Print JSON coverage file
        run: cat coverage/coverage-summary.json

      - name: Show downloaded coverage file
        run: ls -la coverage/

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Run AI coverage analysis
        run: |
          chmod +x scripts/*.sh
          ./scripts/github-coverage-bot.sh coverage/coverage-summary.json
      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Post GPT report as PR comment (via REST API)
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Posting PR comment via gh api..."
          gh api "repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
          -f body="$(cat .gpt-comment.md)" || echo "Comment failed"


 